package  {			//mover pasta "images", "caurina" e "fonts" para dentro da pasta "src"	//por o ficheiro 'galeria-data.xml' na mesma directoria do .fla	import com.as3nui.nativeExtensions.air.kinect.Kinect;		import flash.display.Sprite;	import flash.display.MovieClip;	import caurina.transitions.Tweener;	import flash.events.Event;	import flash.events.ProgressEvent;	import flash.events.TimerEvent;	import flash.utils.Timer;	import flash.display.Loader;	import flash.net.URLRequest;	import flash.net.URLLoader;		import flash.text.TextField;	import flash.text.Font;	import flash.text.TextFormat;	import flash.text.TextFieldAutoSize;	import flash.text.TextFormatAlign;	import flash.display.Shape;	import flash.display.Stage;	import flash.display.Bitmap;		public class GaleriaInt extends Sprite {				public var strXMLPath:String = "galeria-data.xml";		public var intSlideCount:int;		public var myLoader:URLLoader;		public var slideLoader:Loader;		public var myXML:XML;				public var price:TextField;		public var desc:TextField;		public var lbl_loading:TextField;		public var textFormat:TextFormat;		public var textFormatR:TextFormat;		public var textFormatP1:TextFormat;		public var textFormatP2:TextFormat;		public var my_loaders_array:Array;		public var my_success_counter:Number;		public var my_slideshow:Sprite;		public var my_image_slides:Sprite;		public var my_image_slide:Sprite;		public var my_images:XMLList;				public var totalRows:uint;		public var totalColumns:uint;		public var imageWidth:uint;		public var imageHeight:uint;		public var imagePosX:uint;		public var imagePosY:uint;		public var spacing:uint;		public var coordinatesX:Array;		public var coordinatesY:Array;		public var imagem:Loader;		public var image:Bitmap;		public var galBg:Loader;/////////////////////////////////		public var fmale:Loader;/////////////////////////////////		public var gVidBtn:GalVidBtn;////////////////////////////		public var hSarr:Array;		public var hSVarr:Array;				//public var dev:Kinect;				//public var hSpot:UIHotSpotDemo;		      	[Embed(source="/fonts/font01.otf",		    fontName = "myFont", 		    mimeType = "application/x-font", 		    fontWeight="normal", 		    fontStyle="normal", 		    advancedAntiAliasing="true", 		    embedAsCFF="false")]		private var fontFontSample:Class;				public function GaleriaInt(hSinstances:Array,hSVinstances:Array) {						super();						hSarr = new Array();			hSarr = hSinstances;			hSVarr = new Array();			hSVarr = hSVinstances;						//addEventListener(CustomEvent.VIDEO_LOAD, videoLoaded);			/*hSpot = new UIHotSpotDemo();			addChild(hSpot);*/						galBg = new Loader();			galBg.load(new URLRequest("/src/images/embedded/galBg.png"));			addChild(galBg);			galBg.x = 485;						fmale = new Loader();///////////////////////////////////////////////////////////////////////////////////////////////////			fmale.load(new URLRequest("/src/images/embedded/fe-male.png"));			addChild(fmale);			fmale.x = 683;			fmale.alpha = 0;						gVidBtn = new GalVidBtn();			addChild(gVidBtn);			gVidBtn.y = 232;			Tweener.addTween(gVidBtn, {y:0, time: 1, transition: "easeInOutCubic", delay: 4});						var step:Loader = new Loader();			step.load(new URLRequest("/src/images/embedded/step.png"));			addChild(step);			step.x = 475;			step.y = 620;///////////////////////////////////////////////////////////////////////////////////////////////////////////									/*var rectangle3:Shape = new Shape;///////////////////////////////////////////////////////////////////////////////////////////////////////////			rectangle3.graphics.beginFill(0xffffff);			rectangle3.graphics.drawRect (47, 565, 196, 235); 			rectangle3.graphics.endFill();			rectangle3.alpha = 0.4;			addChild(rectangle3);*/ 			textFormat= new TextFormat();			textFormat.font = "myFont";			textFormat.size = 80;			textFormat.align = TextFormatAlign.LEFT;			textFormatR= new TextFormat();			textFormatR.font = "myFont";			textFormatR.size = 60;			textFormatR.align = TextFormatAlign.RIGHT;						textFormatP2= new TextFormat();			textFormatP2.font = "myFont";			textFormatP2.size = 65;			textFormatP2.align = TextFormatAlign.LEFT;						lbl_loading = new TextField();			addChild(lbl_loading);						price = new TextField();						desc = new TextField();						myLoader = new URLLoader();			myLoader.load(new URLRequest(strXMLPath));			myLoader.addEventListener(Event.COMPLETE, processXML);						my_loaders_array = new Array();			my_success_counter = 0;			my_slideshow = new Sprite();			my_image_slides = new Sprite();			totalRows = 2;			totalColumns = 6;						imageWidth = 250;			imageHeight = imageWidth;			imagePosX = 0;			imagePosY = 0;			spacing = 2;			coordinatesX = new Array();			coordinatesY = new Array();			mapping();					}		function handler(event:CustomEvent):void		{	//trace("SIZE",hSarr.length,"EVENT", event.data,"ARRAY",hSarr );			for (var i:Number = 0; i < hSarr.length; i++)			{				if(hSarr[i] == event.data)				{					trace("IN");					if(image != null)					{						removeChild(image);					}					var my_url:String = my_images[i].@src;					imagem = new Loader();					imagem.load(new URLRequest(my_url));					imagem.contentLoaderInfo.addEventListener(Event.COMPLETE, onCompleteLoad);										price.embedFonts = true;					price.text = my_images[i].@desc;					price.textColor = 0xFFFFFF;					price.wordWrap = false;					price.multiline = false;					this.addChild(price);					price.setTextFormat(textFormatR);					//price.y = 578;					price.x = 560;					Autosize(price, 100, 100);										if (price.textHeight > 99){						price.y = 540;					} else {					price.y = 630 - price.textHeight - 99/price.textHeight*3;					}								/*desc.width = 320;					price.height = 60;*/					desc.embedFonts = true;					desc.text = my_images[i].@desc2;					desc.textColor = 0xffffff;					desc.wordWrap = false;					desc.multiline = false;					desc.autoSize = TextFieldAutoSize.LEFT;					this.addChild(desc);					desc.setTextFormat(textFormatP2);					//desc.y = 578;					desc.x = 560;					Autosize(desc, 610, 65);					if (desc.textHeight > 64){						desc.y = 620;					} else {					desc.y = 690 - desc.textHeight - 65/desc.textHeight*3;					}				}				var euro:TextField = new TextField();				euro.width = 80;				euro.embedFonts = true;				euro.text = "€";				euro.textColor = 0xffcb08;				euro.setTextFormat(textFormat);				this.addChild(euro);				euro.y = 550;				euro.x = 660;			}			for (var e:Number = 0; e < hSVarr.length; e++)			{				if(hSVarr[e] == event.data)				{					dispatchEvent(new NavigationEvent(NavigationEvent.VIDEO_PLAY));				}			}		}		function gender(event:CustomEvent):void		{			if(event.io == 0)			{				Tweener.addTween(my_image_slides, {y:23, time:1, transition: "easeOutQuart"});			}  			if(event.io == 1)			{				Tweener.addTween(my_image_slides, {y:-755, time:1, transition: "easeOutQuart"});				//my_image_slides.y = -755;			}		}		function processXML(e:Event):void		{			myXML = new XML(e.target.data);			my_images = myXML.image; 			intSlideCount = myXML.image.length();			loadImages();					}		function loadImages():void{			for (var i:Number = 0; i < intSlideCount; i++)			{ 				var my_url:String = my_images[i].@src;				var my_loader:Loader = new Loader();				my_loader.load(new URLRequest(my_url));				my_loader.contentLoaderInfo.addEventListener(Event.COMPLETE, onComplete);				my_loaders_array.push(my_loader); 			}						}		function onComplete(e:Event):void		{				my_success_counter++;			if (my_success_counter == intSlideCount)			{				startShow();			}		}		function onCompleteLoad(e:Event):void		{			var setBool = function(booli:Boolean) {////////////////////////////////////////////////////////////////				fmale.alpha = 0.4;				if(booli){					Tweener.addTween(fmale, {alpha:1, time: 0.5, transition: "easeInOutCubic"});				}			}////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////						if(galBg.alpha == 1)			{				Tweener.addTween(galBg, {alpha:0.4, time: 0.5, transition: "easeInOutCubic", onComplete:setBool, onCompleteParams:[true]});/////////////////////////							}			addChild(imagem)			imagem.content.width = 560;			imagem.content.height = 560;			imagem.content.x = 578;			imagem.content.y = 75;			image = Bitmap(imagem.content);          	image.smoothing=true;          	addChild(image);		}				function Autosize(txt:TextField, maxWidth:int, maxHeight:int):void 		{    			var maxTextWidth:int = maxWidth;  			var maxTextHeight:int = maxHeight;  			var f:TextFormat = txt.getTextFormat();  			while (txt.textWidth > maxTextWidth || txt.textHeight > maxTextHeight) {   				f.size = int(f.size) - 1;  				txt.setTextFormat(f);  			}		}		function startShow():void		{				addChild(my_slideshow);			my_slideshow.addChild(my_image_slides);			nextImage();			stage.addEventListener(CustomEvent.INSTANCE_NAME, handler);			stage.addEventListener(CustomEvent.GENERO, gender);		}				function nextImage():void		{			for(var i:uint =0; i < my_loaders_array.length; i++)			{				var my_image:Loader = Loader(my_loaders_array[i]);				my_image.content.width = imageWidth;				my_image.content.height = imageHeight;				my_image.content.x = coordinatesX[i];				my_image.content.y = coordinatesY[i];				var image:Bitmap = Bitmap(my_image.content);          		image.smoothing=true;          		my_image_slides.addChild(image); 			}			my_image_slides.x = 10;			my_image_slides.y = 23;		}		function mapping():void		{			var coordX:uint;			var coordY:uint;			for (var row:uint = 0; row < totalRows; row++){				for (var col:uint = 0; col < totalColumns; col++) {					coordX = (row * imageWidth) + (row * spacing);					//coordX += (1 * spacing);					coordY = col * (imageHeight + spacing);					if(col >= 3){						coordY += 23;					}					coordinatesX.push(coordX);					coordinatesY.push(coordY);					if(col == 2 && row == 0){						coordinatesX.pop();						coordinatesY.pop();					}					if(col == 5 && row == 0){						coordinatesX.pop();						coordinatesY.pop();					}				}			}		}		/*public function removeListeners():void		{			startShow.removeListener(CustomEvent.INSTANCE_NAME, handler);			startShow.removeListener(CustomEvent.GENERO, gender);				}*/	}}