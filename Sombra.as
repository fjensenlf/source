package  {	import com.as3nui.nativeExtensions.air.kinect.data.User;		import flash.display.Bitmap;	import flash.geom.Point;	import flash.utils.Dictionary;	import flash.filters.BlurFilter;	import flash.display.Sprite;	import flash.geom.Matrix;	import flash.filters.ColorMatrixFilter;		public class Sombra extends Sprite{		public var userMasks:Vector.<Bitmap>;		public var userMaskDictionary:Dictionary;				public var myBlur:BlurFilter;		public function Sombra() {			myBlur = new BlurFilter (30,30,2);				userMasks = new Vector.<Bitmap>();			userMaskDictionary = new Dictionary();		}		public function usersDetected(e):void {			for each(var user:User in e.users) {				var bmp:Bitmap = new Bitmap();				userMasks.push(bmp);				userMaskDictionary[user.userID] = bmp;				addChild(bmp);			}		}		public function usersUpdate(ev):void {			var matrix:Array = [0,0,0,0,0,								0,0,0,0,0,								0,0,0,0,0,								0,0,0,0.4,0];			for each(var user:User in ev.users) {				if(user){					var bmp:Bitmap = userMaskDictionary[user.userID];					if (bmp != null) {						bmp.bitmapData = user.userMaskData;						bmp.bitmapData.applyFilter(bmp.bitmapData, bmp.bitmapData.rect, new Point(), new ColorMatrixFilter(matrix));						bmp.width = 1440;						bmp.height = 900;						bmp.x = -110;						bmp.y = -70;						bmp.filters = [myBlur];						return					}				}			   //for each(var user:User in event.users) {//sombra para todos os users (LENTO)//				   //trace(user.trackingID,user.position.world.x,user.position.world.y,abs(user.position.world.x),user.position.world.z);//					var bmp:Bitmap = userMaskDictionary[user.userID];//					if (bmp != null) {//						bmp.bitmapData = user.userMaskData;//						bmp.bitmapData.applyFilter(bmp.bitmapData, bmp.bitmapData.rect, new Point(), new ColorMatrixFilter(matrix));//						bmp.width = 1440;//						bmp.height = 900;//						bmp.x = -110;//						bmp.y = -70;//					}//				}//				bmp.filters = [myBlur];			}					}		public function usersRemoved(eve):void {				for each(var user:User in eve.users)				{				var bmp:Bitmap = userMaskDictionary[user.userID];				if (bmp != null) {					if (bmp.parent != null) {						bmp.parent.removeChild(bmp);					}					var index:int = userMasks.indexOf(bmp);					if (index > -1) {						userMasks.splice(index, 1);					}					delete userMaskDictionary[user.userID];				}			}		}	}	}